import Head from "next/head";
import Link from "next/link";

import { useEffect } from "react";
import postcss from "postcss"
import tailwindcss as 'tailwindcss'

interface ClassInfo {
  name: string;
  properties: { property: string; value: string }[];
}

async function convertTailwindClassesToCSS() {
  try {
    const css = await postcss([tailwindcss]).process(tailwindClasses.join(' '));
    console.log(css.content);
  } catch (error) {
    console.error(error);
  }
}

const findPropertiesForClassName = (className: string) => {
  // const element = document.createElement("div");
  // element.classList.add(className);
  // document.body.appendChild(element);
  // const computedStyle = window.getComputedStyle(element);
  // const properties = Array.from(computedStyle).map((property) => {
  //   return { property, value: computedStyle.getPropertyValue(property) };
  // });
  // document.body.removeChild(element);
  // if (properties.length > 0) {
  //   const classInfo: ClassInfo = {
  //     name: className,
  //     properties: properties,
  //   };
  //   return classInfo;
  // } else {
  //   return null;
  // }
};

export default function Home() {
  useEffect(() => {
    // Function to collect unique CSS class names
    const collectClassNames = () => {
      const elements = Array.from(document.querySelectorAll("*"));
      const classNames: ClassInfo[] = [];

      elements.forEach((element) => {
        if (element instanceof HTMLElement) {
          // console.log(element);
          // console.log(element.classList);
          const classList = element.classList;

          if (classList.length !== 0 && classList[0] !== "") {
            for (const className of classList) {
              if (
                !classNames.some((classInfo) => classInfo.name === className)
              ) {
                const classInfo = findPropertiesForClassName(className);
                if (classInfo) {
                  classNames.push(classInfo);
                }
              }
            }
          }

          // const computedStyle = getComputedStyle(element);
          // const elementClassNames = Array.from(computedStyle).filter(
          //   (property) => property.startsWith("class")
          // );
          // elementClassNames.forEach((className) => {
          //   const classes = className.split(" ");
          //   classes.forEach((c) => classNames.add(c));
          // });
        }
      });

      console.log(classNames);
      convertTailwindClassesToCSS()

      // const classList = Array.from(classNames);
      // console.log(classList);
    };

    collectClassNames();
  }, []);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
        </div>
      </main>
    </>
  );
}
